{
  "suggest.triggerAfterInsertEnter": false,
  "suggest.timeout": 500,
  "suggest.noselect": true,
  "suggest.detailField": "abbr",
  /* "suggest.snippetIndicator": "ðŸŒŸ", */
  "suggest.triggerCompletionWait": 100,
  "suggest.echodocSupport": true,
  "diagnostic.signOffset": 9999999,
  "diagnostic.errorSign": "â¤«",
  "diagnostic.warningSign": "âš ",
  "diagnostic.displayByAle": false,
  "diagnostic.refreshOnInsertMode": true,
  //tslint
  "tslint.autoFixOnSave": true,
  //prettier
  "prettier.eslintIntegration": true,
  "prettier.tslintIntegration": true,
  "prettier.stylelintIntegration": true,
  //emmet
  "emmet.includeLanguages": {
    "vue-html": "html",
    "javascript": "javascriptreact"
  },
  //python
  "python.autoComplete.addBrackets": true,
  // eslint
  "eslint.filetypes": ["javascript", "javascript.jsx", "javascriptreact"],
  "eslint.autoFix": true,
  "eslint.autoFixOnSave": true,

  "javascript.suggestionActions.enabled": false,
  "coc.preferences.colorSupport": false,

  "prettier.semi": true,
  "prettier.singleQuote": true,
  "prettier.bracketSpacing": true,
  "prettier.jsxBracketSameLine": false,
  "prettier.arrowParens": "always",

  "java.format.enabled": true,
  /* "java.home": "/Library/Java/JavaVirtualMachines/jdk-12.0.1.jdk/Contents/Home", */
  "java.home": "/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home",
  "java.errors.incompleteClasspath.severity": "ignore",

  "snippets.ultisnips.enable": true,
  "snippets.ultisnips.directories": ["~/.config/coc/ultisnips"],
  "snippets.extends": {
    "cpp": ["c"],
    "typescript": ["javascript"]
  },
  "languageserver": {
    "dart": {
      "command": "dart_language_server",
      "args": [],
      "filetypes": ["dart"],
      "initializationOptions": {},
      "settings": {
        "dart": {
          "validation": {},
          "completion": {}
        }
      }
    },
    // brew tap twlz0ne/homebrew-ccls && brew install ccls
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "objc", "objcpp"],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cache": {
          "directory": "/tmp/ccls"
        },
        // "cacheDirectory": "/tmp/ccls"
        "clang": {
          // make sure you have installed commandLineTools
          "resourceDir": "/Library/Developer/CommandLineTools/usr/lib/clang/11.0.0",
          "extraArgs": [
            "-isystem",
            "/Applications/Xcode-beta.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1",
            "-I",
            "/Applications/Xcode-beta.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/"
          ]
        }
      }
    },
    // yarn global add dockerfile-language-server-nodejs
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    /* // see gopls https://github.com/saibing/tools */
    /* "golang": { */
    /*   "command": "gopls", */
    /*   "args": [], */
    /*   "rootPatterns": ["go.mod", ".vim/", ".git/", ".hg/"], */
    /*   "filetypes": ["go"] */
    /* }, */
    // go get -u -v github.com/sourcegraph/go-langserver
    "golang": {
      "command": "go-langserver",
      "filetypes": ["go"],
      "initializationOptions": {
        "gocodeCompletionEnabled": true,
        "diagnosticsEnabled": true,
        "lintTool": "golint"
      }
    },
    // yarn global add bash-language-server
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    },
    //  /*// brew install php*/
    //  /*// CocInstall coc-phpls*/
    //  /*"intelephense": {*/
    //  /*"command": "intelephense",*/
    //  /*"args": ["--stdio"],*/
    //  /*"filetypes": ["php"],*/
    //  /*"initializationOptions": {*/
    //  /*"storagePath": "/tmp/intelephense"*/
    //  /*}*/
    //  /*}*/
    //  // go get -u -v github.com/mattn/efm-langserver/cmd/efm-langserver
    //  // "efm": {
    //  //  "command": "efm-langserver",
    //  //  "args": [],
    //  //  // custom config path
    //  //  /* "args": ["-c", "$HOME/.config/efm-langserver/config.yaml"], */
    //  //  "filetypes": ["vim", "eruby", "markdown"]
    //  // }

    // julia langage server
    "julia": {
      "command": "/usr/local/bin/julia",
      "args": [
        "--startup-file=no",
        "--history-file=no",
        "-e",
        "using LanguageServer; using Pkg; import StaticLint; import SymbolServer; env_path = dirname(Pkg.Types.Context().env.project_file); debug = false; server = LanguageServer.LanguageServerInstance(stdin, stdout, debug, env_path, \"\", Dict()); server.runlinter = true; run(server);"
      ],
      "filetypes": ["julia"]
    }
  }
}
