{
  "javascript.suggestionActions.enabled": false,
  "coc.preferences.colorSupport": false,

  "prettier.semi": true,
  "prettier.singleQuote": true,
  "prettier.bracketSpacing": true,
  "prettier.jsxBracketSameLine": false,
  "prettier.arrowParens": "always",

  "java.format.enabled": true,

  /* "snippets.ultisnips.enable": true, */
  /* "snippets.ultisnips.directories": ["~/.config/nvim/ultisnips"], */
  "snippets.extends": {
    "cpp": ["c"],
    "typescript": ["javascript"]
  },

  "snippets.ultisnips.directories": ["/Users/bantana/.config/nvim/ultisnips"],
  //  enable update imports on file move, requires watchman installed, default true.
  /* "javascript.updateImportsOnFileMove.enable": true, */
  // enable codeLens for implementations, default true
  /* "javascript.implementationsCodeLens.enable": true, */
  // enable codeLens for references, default true
  /* "javascript.referencesCodeLens.enable": true, */
  // remove semicolons on format for javascript.
  /* "javascript.preferences.noSemicolons": false, */
  // quote style of javascript, could be single or double, default "double"
  /* "javascript.preferences.quoteStyle": "single", */
  // enable suggestion actions for javascript, default true
  // javascript validation, default true
  /* "javascript.validate.enable": true, */
  // enable javascript completion, default true
  /* "javascript.suggest.enabled": true, */
  // enable suggest paths in import statement and require calls, default true
  /* "javascript.suggest.paths": true, */
  // enable suggest for auto import, default true
  /* "javascript.suggest.autoImports": true, */
  // enable using snippet for method suggestion
  /* "javascript.suggest.completeFunctionCalls": true, */

  "languageserver": {
    "dart": {
      "command": "dart_language_server",
      "args": [],
      "filetypes": ["dart"],
      "initializationOptions": {},
      "settings": {
        "dart": {
          "validation": {},
          "completion": {}
        }
      }
    },
    // brew tap twlz0ne/homebrew-ccls && brew install ccls
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "objc", "objcpp"],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cacheDirectory": "/tmp/ccls"
      }
    },
    // yarn global add dockerfile-language-server-nodejs
    "dockerfile": {
      "command": "docker-langserver",
      "filetypes": ["dockerfile"],
      "args": ["--stdio"]
    },
    // go get -u -v github.com/sourcegraph/go-langserver
    "golang": {
      "command": "go-langserver",
      "filetypes": ["go"],
      "initializationOptions": {
        "gocodeCompletionEnabled": true,
        "diagnosticsEnabled": true,
        "lintTool": "golint"
      }
    },
    // yarn global add bash-language-server
    "bash": {
      "command": "bash-language-server",
      "args": ["start"],
      "filetypes": ["sh"],
      "ignoredRootPaths": ["~"]
    }
    // go get -u -v github.com/mattn/efm-langserver/cmd/efm-langserver
    // "efm": {
    //  "command": "efm-langserver",
    //  "args": [],
    //  // custom config path
    //  /* "args": ["-c", "$HOME/.config/efm-langserver/config.yaml"], */
    //  "filetypes": ["vim", "eruby", "markdown"]
    // }
  }
  /*"java.errors.incompleteClasspath.severity": "ignore"*/
}
